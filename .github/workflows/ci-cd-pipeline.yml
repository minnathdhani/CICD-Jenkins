name: Flask CI/CD Pipeline

on:
  push:
    branches:
      - staging
      - main
  pull_request:
    branches:
      - main
  release:
    types: [created]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Create .env file with MONGO_URI
        run: echo "MONGO_URI=${{ secrets.MONGOURI }}" > .env

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest test_app.py

  deploy-staging:
    if: github.ref == 'refs/heads/staging'
    needs: build-and-test
    runs-on: ubuntu-latest
    env:
      EC2_HOST: 13.233.145.173
      EC2_USER: ubuntu
      GITREPO: https://github.com/minnathdhani/CICD-Jenkins.git
      GIT_BRANCH: main
      SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
      MONGO_URI: ${{ secrets.MONGOURI }}
    steps:
      - name: Deploy to EC2 Instance
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem

          ssh -o StrictHostKeyChecking=no -i private_key.pem $EC2_USER@$EC2_HOST << EOF
            sudo apt update -y
            sudo apt install -y python3 python3-venv python3-pip nginx git

            rm -rf CICD-Jenkins
            git clone -b $GIT_BRANCH $GITREPO
            cd CICD-Jenkins

            python3 -m venv venv
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

            echo "MONGO_URI=${MONGO_URI}" > .env

            pkill -f "python app.py" || true
            nohup python3 app.py > output.log 2>&1 &

            cat << 'NGINX_CONF' | sudo tee /etc/nginx/sites-available/flaskapp
            server {
                listen 80;
                server_name _;

                location / {
                    proxy_pass http://127.0.0.1:5000;
                    proxy_set_header Host \$host;
                    proxy_set_header X-Real-IP \$remote_addr;
                    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                }
            }
NGINX_CONF

            sudo ln -sf /etc/nginx/sites-available/flaskapp /etc/nginx/sites-enabled/flaskapp
            sudo rm -f /etc/nginx/sites-enabled/default
            sudo nginx -t && sudo systemctl restart nginx
          EOF

          rm -f private_key.pem

